#pragma kernel Sum

RWStructuredBuffer<float> buffer;
uint count;

uint rstride; // number of reductions, distance between elements
uint rcount;  // number of elemeents



[numthreads(64, 1, 1)]
void Sum(uint3 id : SV_DispatchThreadID) {
    if (id.x > (uint)count) {
        return;
    }
    uint rid = id.x / rstride;
    uint s2 = rcount;


    for (uint s = (rcount + 1) / 2; s > 0; s = (s + 1) / 2) {
        uint n = s2 - s;
        s2 = s;

        if (rid < n) {
            float v = buffer[id.x + rstride * s];
            buffer[id.x] += v;
        }

        GroupMemoryBarrierWithGroupSync();

        if (s == 1) {
            break;
        }
    }
}