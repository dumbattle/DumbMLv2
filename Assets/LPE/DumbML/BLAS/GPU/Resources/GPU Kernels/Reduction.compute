#pragma kernel Sum
#pragma kernel Max

RWStructuredBuffer<float> buffer;
uint count;

uint rstride; // number of output elements, distance between elements
uint rcount;  // number of reductions
uint s; 
uint s2;  



[numthreads(64, 1, 1)]
void Sum(uint3 id : SV_DispatchThreadID) {
    if (id.x > (uint)count) {
        return;
    }
    uint rid = id.x / rstride;
    uint n = s2 - s;

    if (rid < n) {
        float v = buffer[id.x + rstride * s];
        buffer[id.x] += v;
    }

}
[numthreads(64, 1, 1)]
void Max(uint3 id : SV_DispatchThreadID) {
    if (id.x > (uint)count) {
        return;
    }
    uint rid = id.x / rstride;
    uint n = s2 - s;

    if (rid < n) {
        float v = buffer[id.x + rstride * s];
        buffer[id.x] = v > buffer[id.x] ? v : buffer[id.x];
    }
}